---
main:
  region: RegionOne 
  # timezone is unused at this time
  timezone: China/ShangHai 
  database_uri: mysql://root:passw0rd@localhost:3306/billing?charset=utf8
  trust_sources: 
    - openstack
  log_file: logs/billing.log
  ignore_tenants:
    - test
    - demo
    - alt_demo
    - invisible_to_admin
rates_config:
  file: /home/norman/distil/examples/real_rates.csv
# Keystone auth user details
auth:
  end_point: http://10.104.0.76:5000/v2.0
  default_tenant: admin
  username: admin
  password: admin
  insecure: True
  authenticate_clients: True
  # used for authenticate_clients
  identity_url: http://10.104.0.76:35357
# configuration for defining usage collection
collection:
  max_windows_per_cycle: 4
  # define what the meter in 'mater_mappings' is
  meter_pairs:
    state: instance
  # defines which meter is mapped to which transformer
  meter_mappings:
    # meter name as seen in ceilometer
    state: 
      # type of resource it maps to (seen on sales order)
      type: Virtual Machine
      # which transformer to use
      transformer: Uptime
      # what unit type is coming in via the meter
      unit: second 
      metadata:
        name:
          sources:
            # which keys to search for in the ceilometer entry metadata
            # this can be more than one as metadata is inconsistent between
            # source types
            - display_name
        availability zone:
          sources:
            - OS-EXT-AZ:availability_zone
    ip.floating:
      service: ip.floating
      type: Floating IP
      transformer: GaugeMax
      unit: hour
      metadata:
        ip address:
          sources:
            - address
            - floating_ip_address
    volume.size:
      service: volume.size
      type: Volume
      transformer: GaugeMax
      unit: gigabyte
      metadata:
        name:
          sources:
            - display_name
        availability zone:
          sources:
            - availability_zone
    instance:
      service: instance.root.disk
      type: Volume
      transformer: FromImage
      unit: gigabyte
      # if true allows id pattern, and metadata patterns
      transform_info: True
      # allows us to put the id into a pattern,
      # only if transform_info is true,
      # such as to append something to it
      res_id_template: "%s-root_disk"
      metadata:
        name:
          sources:
            - display_name
          template: "%s - root disk"
        availability zone:
          sources:
            - availability_zone
    image.size:
      service: image.size
      type: Image
      transformer: GaugeMax
      unit: byte
      metadata:
        name:
          sources:
            - name
            - properties.image_name
    bandwidth:
      type: Network Traffic
      transformer: GaugeSum
      unit: byte
      metadata:
        meter_label_id:
          sources:
            - label_id
    network.services.vpn:
      type: VPN
      transformer: GaugeNetworkService
      unit: hour
      metadata:
        name:
          sources:
            - name
        subnet:
          sources:
            - subnet_id
    network:
      type: Network
      transformer: GaugeMax
      unit: hour
      metadata:
        name:
          sources:
            - name
    router:
      type: Router
      transformer: GaugeMax
      unit: hour
      metadata:
        name:
          sources:
            - name
# transformer configs
transformers:
  uptime:
    # states marked as "billable" for VMs. 
    tracked_states:
      - active
      - paused
      - rescued
      - resized
  from_image:
    service: instance.root.disk
    # What metadata values to check
    md_keys:
      - image_ref
      - image_meta.base_image_ref
    none_values:
      - None
      - ""
    # where to get volume size from
    size_keys:
      - root_gb
